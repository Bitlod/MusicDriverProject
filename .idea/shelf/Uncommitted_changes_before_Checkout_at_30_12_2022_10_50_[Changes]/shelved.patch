Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import random\r\n\r\nimport pygame\r\nimport Objects\r\nimport sys\r\nimport os\r\n\r\npygame.init()\r\nsize = (1200, 800)\r\npygame.display.set_caption('MusicDriver')\r\nscreen = pygame.display.set_mode(size)\r\ngameIcon = pygame.image.load('sprites/car_icon.png')\r\npygame.display.set_icon(gameIcon)\r\nborders = Objects.borders\r\ndecorations = Objects.decorations\r\nroads = Objects.roads\r\nmaincar = Objects.main_car\r\ncars1 = Objects.cars1\r\ncars2 = Objects.cars2\r\ncars3 = Objects.cars3\r\ncars4 = Objects.cars4\r\nFPS = 60\r\nclock = pygame.time.Clock()\r\n\r\n\r\ndef load_image(name, colorkey=None):\r\n    fullname = os.path.join(name)\r\n    if not os.path.isfile(fullname):\r\n        print(f\"Файл с изображением '{fullname}' не найден\")\r\n        sys.exit()\r\n    image = pygame.image.load(fullname)\r\n    if colorkey is not None:\r\n        image = image.convert()\r\n        if colorkey == -1:\r\n            colorkey = image.get_at((0, 0))\r\n        image.set_colorkey(colorkey)\r\n    else:\r\n        image = image.convert_alpha()\r\n    return image\r\n\r\n\r\ndef terminate():\r\n    pygame.quit()\r\n    sys.exit()\r\n\r\n\r\ndef start_screen():\r\n    intro_text = [\"MusicDriver\", \"\",\r\n                  \"Правила игры\",\r\n                  \"Двигай мышкой и уворачивайся от мошын\",\r\n                  \"Не ударься в края дороги, они кусаются!\",\r\n                  \"спрайты не оч, но как умею\",\r\n                  \"приходится выводить их построчно\"\r\n                  '',\r\n                  '',\r\n                  '',\r\n                  'Нажми сюда']\r\n\r\n    fon = pygame.transform.scale(load_image('sprites/lil_tree.png'), size)\r\n    screen.blit(fon, (0, 0))\r\n    font = pygame.font.Font('shrift/Shrifty.ttf', 30)\r\n    text_coord = 100\r\n    for line in intro_text:\r\n        string_rendered = font.render(line, bool(1), pygame.Color('white'))\r\n        intro_rect = string_rendered.get_rect()\r\n        intro_rect.x = 10\r\n        text_coord += 10\r\n        intro_rect.top = text_coord\r\n        intro_rect.x = 10\r\n        text_coord += intro_rect.height\r\n        screen.blit(string_rendered, intro_rect)\r\n\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif event.type == pygame.KEYDOWN or \\\r\n                    event.type == pygame.MOUSEBUTTONDOWN:\r\n                return\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n\r\n\r\ndef main():\r\n    i = 0\r\n    border1 = Objects.Border((0, 300))\r\n    border2 = Objects.Border((0, 600))\r\n\r\n    MainCar = Objects.MainCar((0, 0))\r\n\r\n    running = True\r\n\r\n    road = Objects.Road((0, 0))\r\n    deadend = Objects.Road((0, 1200))\r\n\r\n    # f\r\n\r\n    coords = [53, 118, 183, 248]\r\n    enemies1 = []\r\n    enemies2 = []\r\n    enemies3 = []\r\n    enemies4 = []\r\n\r\n    enemies1.append(Objects.EnemyCar((), coords[0], 'c1'))\r\n    enemies2.append(Objects.EnemyCar((), coords[1], 'c2'))\r\n    enemies3.append(Objects.EnemyCar((), coords[2], 'c3'))\r\n    enemies4.append(Objects.EnemyCar((), coords[3], 'c4'))\r\n\r\n    if enemies1[0].rect.x - enemies2[0].rect.x <= 200 and enemies1[0].rect.x >= enemies2[0].rect.x:\r\n        enemies1[0].rect.x += 300\r\n    if enemies2[0].rect.x - enemies1[0].rect.x <= 200 and enemies2[0].rect.x >= enemies1[0].rect.x:\r\n        enemies2[0].rect.x += 300\r\n\r\n    while running:\r\n        i += 1\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                running = False\r\n            if event.type == pygame.MOUSEMOTION and MainCar.update() is False:\r\n                MainCar.rect.center = event.pos\r\n            if event.type == pygame.AUDIO_ALLOW_ANY_CHANGE:\r\n                pass\r\n\r\n        if MainCar.update() == (True, 'c1'):\r\n            enemies1[0].stop()\r\n            road.rect.left = 0\r\n        if MainCar.update() == (True, 'c2'):\r\n            enemies2[0].stop()\r\n            road.rect.left = 0\r\n        if MainCar.update() == (True, 'c3'):\r\n            enemies3[0].stop()\r\n            road.rect.left = 0\r\n        if MainCar.update() == (True, 'c4'):\r\n            enemies4[0].stop()\r\n            road.rect.left = 0\r\n\r\n        if MainCar.update() == (True, 'b'):\r\n            road.rect.left = 0\r\n\r\n        if road.rect.left == 0:\r\n            road.rect.left = 200\r\n            deadend.rect.left = road.rect.left - deadend.rect.size[1]\r\n\r\n        print(enemies1[0].rect.x)\r\n        if enemies1[0].rect.x in range(-100, -50):\r\n            enemies1[0].rect.x = random.randint(1500, 1900) + random.randint(-300, 400)\r\n        if enemies2[0].rect.x in range(-100, -50):\r\n            enemies2[0].rect.x = random.randint(1500, 1900) + random.randint(-300, 400)\r\n        if enemies3[0].rect.x in range(-100, -50):\r\n            enemies3[0].rect.x = random.randint(1500, 1900) + random.randint(-300, 400)\r\n        if enemies4[0].rect.x in range(-100, -50):\r\n            enemies4[0].rect.x = random.randint(1500, 1900) + random.randint(-300, 400)\r\n\r\n        if enemies1[0].rect.x - enemies2[0].rect.x <= 200 and enemies1[0].rect.x >= enemies2[0].rect.x:\r\n            enemies1[0].rect.x += 300\r\n        if enemies2[0].rect.x - enemies1[0].rect.x <= 200 and enemies2[0].rect.x >= enemies1[0].rect.x:\r\n            enemies2[0].rect.x += 300\r\n\r\n        screen.fill(\"#212621\")\r\n        roads.update()\r\n        roads.draw(screen)\r\n        pygame.draw.rect(screen, 'gray', border1)\r\n        pygame.draw.rect(screen, 'gray', border2)\r\n        decorations.update()\r\n        decorations.draw(screen)\r\n        maincar.update()\r\n        maincar.draw(screen)\r\n\r\n        cars1.update()\r\n        cars1.draw(screen)\r\n        cars2.update()\r\n        cars2.draw(screen)\r\n        cars3.update()\r\n        cars3.draw(screen)\r\n        cars4.update()\r\n        cars4.draw(screen)\r\n\r\n        clock.tick(FPS)\r\n        pygame.display.flip()\r\n    pygame.quit()\r\n\r\n\r\nif __name__ == '__main__':\r\n    start_screen()\r\n    main()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision a5807ec937130d179891a1a56166d4946de2dce8)
+++ b/main.py	(date 1672386499908)
@@ -23,6 +23,7 @@
 clock = pygame.time.Clock()
 
 
+
 def load_image(name, colorkey=None):
     fullname = os.path.join(name)
     if not os.path.isfile(fullname):
@@ -82,12 +83,13 @@
 
 
 def main():
+    Beep = pygame.mixer.Sound('audio/gudok.ogg')
+    crash = pygame.mixer.Sound('audio/carcrash.mp3')
     i = 0
     border1 = Objects.Border((0, 300))
     border2 = Objects.Border((0, 600))
-
+    carcrash = False
     MainCar = Objects.MainCar((0, 0))
-
     running = True
 
     road = Objects.Road((0, 0))
@@ -106,36 +108,51 @@
     enemies3.append(Objects.EnemyCar((), coords[2], 'c3'))
     enemies4.append(Objects.EnemyCar((), coords[3], 'c4'))
 
-    if enemies1[0].rect.x - enemies2[0].rect.x <= 200 and enemies1[0].rect.x >= enemies2[0].rect.x:
-        enemies1[0].rect.x += 300
-    if enemies2[0].rect.x - enemies1[0].rect.x <= 200 and enemies2[0].rect.x >= enemies1[0].rect.x:
-        enemies2[0].rect.x += 300
-
     while running:
-        i += 1
         for event in pygame.event.get():
             if event.type == pygame.QUIT:
                 running = False
             if event.type == pygame.MOUSEMOTION and MainCar.update() is False:
                 MainCar.rect.center = event.pos
-            if event.type == pygame.AUDIO_ALLOW_ANY_CHANGE:
-                pass
+                if event.buttons == '1':
+                    Beep.play()
+                if event.buttons == 3:
+                    pass
+            elif event.type == pygame.MOUSEBUTTONUP and MainCar.update() is False:
+                if event.button == 1:
+                    Beep.play()
+                elif event.button == 3:
+                    pass
+
 
         if MainCar.update() == (True, 'c1'):
             enemies1[0].stop()
             road.rect.left = 0
+            carcrash = True
+
         if MainCar.update() == (True, 'c2'):
             enemies2[0].stop()
             road.rect.left = 0
+            carcrash = True
+
         if MainCar.update() == (True, 'c3'):
             enemies3[0].stop()
             road.rect.left = 0
+            carcrash = True
+
         if MainCar.update() == (True, 'c4'):
             enemies4[0].stop()
             road.rect.left = 0
+            carcrash = True
 
         if MainCar.update() == (True, 'b'):
             road.rect.left = 0
+            carcrash = True
+        if carcrash is True:
+            if crash is not None:
+                crash.play()
+            crash = None
+
 
         if road.rect.left == 0:
             road.rect.left = 200
@@ -151,11 +168,6 @@
         if enemies4[0].rect.x in range(-100, -50):
             enemies4[0].rect.x = random.randint(1500, 1900) + random.randint(-300, 400)
 
-        if enemies1[0].rect.x - enemies2[0].rect.x <= 200 and enemies1[0].rect.x >= enemies2[0].rect.x:
-            enemies1[0].rect.x += 300
-        if enemies2[0].rect.x - enemies1[0].rect.x <= 200 and enemies2[0].rect.x >= enemies1[0].rect.x:
-            enemies2[0].rect.x += 300
-
         screen.fill("#212621")
         roads.update()
         roads.draw(screen)
Index: Objects.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pygame\r\nimport random\r\n\r\ndecorations = pygame.sprite.Group()\r\nroads = pygame.sprite.Group()\r\nmain_car = pygame.sprite.Group()\r\nborders = pygame.sprite.Group()\r\ncars1 = pygame.sprite.Group()\r\ncars2 = pygame.sprite.Group()\r\ncars3 = pygame.sprite.Group()\r\ncars4 = pygame.sprite.Group()\r\n\r\n\r\nclass Border(pygame.sprite.Sprite):\r\n    size = (1200, 50)\r\n\r\n    def __init__(self, pos):\r\n        super().__init__(borders)\r\n        self.add(borders)\r\n        self.image = pygame.Surface(Border.size)\r\n        self.image.fill(pygame.Color('#808080'))\r\n        self.rect = pygame.Rect(pos, Border.size)\r\n\r\n\r\nclass EnemyCar(pygame.sprite.Sprite):\r\n    def __init__(self, pos, x, cr):\r\n        if cr == 'c1':\r\n            super().__init__(cars1)\r\n            self.add(cars1)\r\n        if cr == 'c2':\r\n            super().__init__(cars2)\r\n            self.add(cars2)\r\n        if cr == 'c3':\r\n            super().__init__(cars3)\r\n            self.add(cars3)\r\n        if cr == 'c4':\r\n            super().__init__(cars4)\r\n            self.add(cars4)\r\n\r\n        self.truck = False\r\n        self.car = random.randint(0, 1)\r\n        if self.car == 0:\r\n            self.image = pygame.image.load('sprites/truck.png').convert_alpha()\r\n            self.rect = self.image.get_rect()\r\n            self.rect.x = random.randint(1500, 1900) + random.randint(-300, 400)\r\n            self.rect.y = 295 + x\r\n            self.truck = True\r\n        else:\r\n            self.image = pygame.image.load('sprites/enemy_car.png').convert_alpha()\r\n            self.rect = self.image.get_rect()\r\n            self.rect.x = random.randint(1500, 1900) + random.randint(-300, 400)\r\n            self.rect.y = 300 + x\r\n            self.truck = False\r\n\r\n    def update(self, *args):\r\n        self.rect.left -= 5\r\n        if pygame.sprite.spritecollideany(self, main_car) and self.truck is False:\r\n            self.image = pygame.image.load('sprites/destroyed_enemy_car.png').convert_alpha()\r\n        elif pygame.sprite.spritecollideany(self, main_car) and self.truck is True:\r\n            self.image = pygame.image.load('sprites/destroyed_truck.png').convert_alpha()\r\n\r\n    def stop(self, *args):\r\n        self.rect.x += 5\r\n\r\n\r\nclass MainCar(pygame.sprite.Sprite):\r\n    def __init__(self, pos):\r\n        super().__init__(main_car)\r\n        self.add(main_car)\r\n        self.image = pygame.image.load('sprites/main_car.png').convert_alpha()\r\n        self.rect = self.image.get_rect()\r\n        self.rect.x = 50\r\n        self.rect.y = 420\r\n\r\n    def update(self):\r\n        if pygame.sprite.spritecollideany(self, cars1):\r\n            self.image = pygame.image.load('sprites/destroyed_main_car.png').convert_alpha()\r\n            return True, 'c1'\r\n        if pygame.sprite.spritecollideany(self, cars2):\r\n            self.image = pygame.image.load('sprites/destroyed_main_car.png').convert_alpha()\r\n            return True, 'c2'\r\n        if pygame.sprite.spritecollideany(self, cars3):\r\n            self.image = pygame.image.load('sprites/destroyed_main_car.png').convert_alpha()\r\n            return True, 'c3'\r\n        if pygame.sprite.spritecollideany(self, cars4):\r\n            self.image = pygame.image.load('sprites/destroyed_main_car.png').convert_alpha()\r\n            return True, 'c4'\r\n        if pygame.sprite.spritecollideany(self, borders):\r\n            self.image = pygame.image.load('sprites/destroyed_main_car.png').convert_alpha()\r\n            return True, 'b'\r\n        else:\r\n            return False\r\n\r\n\r\nclass Road(pygame.sprite.Sprite):\r\n    def __init__(self, pos):\r\n        super().__init__(roads)\r\n        self.add(roads)\r\n        self.image = pygame.image.load('sprites/road.png').convert_alpha()\r\n        self.rect = self.image.get_rect()\r\n        self.rect.y = 350\r\n\r\n    def update(self, *args):\r\n        self.rect.left -= 3.5\r\n\r\n\r\nclass UpperDec(pygame.sprite.Sprite):\r\n    pass\r\n    def __init__(self, pos):\r\n        super().__init__(decorations)\r\n        self.add(decorations)\r\n        self.dec = random.randint(0, 2)\r\n        if self.dec == 0:\r\n            self.image = pygame.image.load('sprites/lil_tree.png').convert_alpha()\r\n            self.rect = self.image.get_rect()\r\n            self.rect.x = random.randint(1500, 1900) + random.randint(-300, 400)\r\n            self.rect.y = random.randint(0, 100)\r\n        if self.dec == 1:\r\n            self.image = pygame.image.load('sprites/hrusevka.png').convert_alpha()\r\n            self.rect = self.image.get_rect()\r\n            self.rect.x = random.randint(1500, 1900) + random.randint(-300, 400)\r\n            self.rect.y = random.randint(0, 100)\r\n        if self.dec == 2:\r\n            self.image = pygame.image.load('sprites/house.png').convert_alpha()\r\n            self.rect = self.image.get_rect()\r\n            self.rect.x = random.randint(1500, 1900) + random.randint(-300, 400)\r\n            self.rect.y = random.randint(0, 100)\r\n\r\n    def update(self):\r\n        self.rect.left += 3.5\r\n\r\n\r\nclass LowerDec(pygame.sprite.Sprite):\r\n    pass\r\n\r\n    def __init__(self, pos):\r\n        super().__init__(roads)\r\n        self.add(borders)\r\n        self.dec = random.randint(0, 2)\r\n        if self.dec == 0:\r\n            self.image = pygame.image.load('sprites/lil_tree.png').convert_alpha()\r\n            self.rect = self.image.get_rect()\r\n            self.rect.x = random.randint(1500, 1900) + random.randint(-300, 400)\r\n            self.rect.y = random.randint(500, 700)\r\n        if self.dec == 1:\r\n            self.image = pygame.image.load('sprites/hrusevka.png').convert_alpha()\r\n            self.rect = self.image.get_rect()\r\n            self.rect.x = random.randint(1500, 1900) + random.randint(-300, 400)\r\n            self.rect.y = random.randint(500, 700)\r\n        if self.dec == 2:\r\n            self.image = pygame.image.load('sprites/house.png').convert_alpha()\r\n            self.rect = self.image.get_rect()\r\n            self.rect.x = random.randint(1500, 1900) + random.randint(-300, 400)\r\n            self.rect.y = random.randint(500, 700)\r\n\r\n    def update(self):\r\n        self.rect.left += 3.5\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Objects.py b/Objects.py
--- a/Objects.py	(revision a5807ec937130d179891a1a56166d4946de2dce8)
+++ b/Objects.py	(date 1672384012556)
@@ -105,7 +105,6 @@
 
 
 class UpperDec(pygame.sprite.Sprite):
-    pass
     def __init__(self, pos):
         super().__init__(decorations)
         self.add(decorations)
@@ -131,11 +130,9 @@
 
 
 class LowerDec(pygame.sprite.Sprite):
-    pass
-
     def __init__(self, pos):
-        super().__init__(roads)
-        self.add(borders)
+        super().__init__(decorations)
+        self.add(decorations)
         self.dec = random.randint(0, 2)
         if self.dec == 0:
             self.image = pygame.image.load('sprites/lil_tree.png').convert_alpha()
